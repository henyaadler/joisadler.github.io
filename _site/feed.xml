<?xml version="1.0" encoding="utf-8"?><?xml-stylesheet type="text/xml" href="/feed.xslt.xml"?><feed xmlns="http://www.w3.org/2005/Atom"><generator uri="http://jekyllrb.com" version="3.2.1">Jekyll</generator><link href="/feed.xml" rel="self" type="application/atom+xml" /><link href="/" rel="alternate" type="text/html" /><updated>2017-07-20T09:31:54+03:00</updated><id>/</id><title type="html">С нуля до работы</title><subtitle>&lt;h1&gt;C нуля до работы&lt;/h1&gt;&lt;h3&gt;Блог о продвижении новичка к профессии программиста.&lt;/h3&gt;</subtitle><entry><title type="html">Неделя #11. Двигаемся дальше.</title><link href="/week11/" rel="alternate" type="text/html" title="Неделя #11. Двигаемся дальше." /><published>2017-07-18T18:00:00+03:00</published><updated>2017-07-18T18:00:00+03:00</updated><id>/week11</id><content type="html" xml:base="/week11/">&lt;p&gt;Всем привет!
Обычно я публикую новые посты по понедельникам, но в этот раз делаю это с небольшим опозданием, поскольку последние пару дней активно занимался оформлением блога. Тут на днях я получил фидбек от одного из читателей: мне сообщили, что статьи на сайте оформлены не очень хорошо и читать текст сложно. С другой стороны, Кирилл обещал скоро начать пиарить мой блог на Хекслете и в скором времени я ожидаю большого притока читателей. Поэтому сайт должен выглядеть как конфетка. В общем, для вас стараюсь, так что не обессудьте) Ну и буду рад любым дальнейшим комментариям по поводу блога, обратная связь очень важна для меня!&lt;/p&gt;

&lt;p&gt;Ну а теперь — по делу. Прошедшая неделя была довольно продуктивной и я успел сделать и выучить очень много всего.&lt;/p&gt;

&lt;p&gt;Во-первых, я узнал, что для моей библиотеки совсем не обязательно использовать Gulp и для автоматизации таких процессов, как тестирование и транспайлинг исходных файлов вполне можно обойтись npm-скриптами и стандартной юниксовой утилитой make.&lt;/p&gt;

&lt;p&gt;Во-вторых, я примерно понял что именно происходит после установки какого-либо пакета в систему, и по какому принципу она производит поиск исполняемого файла при выполнении какой-либо команды.&lt;/p&gt;

&lt;p&gt;Также, я разобрался в том, что это за &lt;code class=&quot;highlighter-rouge&quot;&gt;package-lock.json&lt;/code&gt;, присутствующий в моем пакете и который я, вроде бы, не создавал. Оказывается, это специальный файл, который генерируется самим npm-ом при установке любых новых зависимостей. Он гарантирует, что даже если мой пакет будет установлен кем-то через 5 лет, то все зависимости подтянутся именно в такой форме и в таких версиях, которые были на момент создания моего пакета. Ну или как-то так. В общем, идея в том, что если за это время в этих сторонних пакетах произойдут кардинальные изменения, то мой все равно будет работать как надо и ничего не поломается. Подробное объяснение можно найти &lt;a href=&quot;https://docs.npmjs.com/files/package-lock.json&quot;&gt;на сайте npm&lt;/a&gt; на анлийском. Если кто-нибудь может посоветовать, где можно найти что-то подобное по-русски — буду очень благодарен, т.к здесь мало что понял.&lt;/p&gt;

&lt;p&gt;Разобрался, наконец-то, в том, для чего мне, собственно, нужен файл index.js, который в моем package.json помечен как main. Оказывается, именно через него нужно экспортировать наружу все содержимое моей библиотеки.&lt;/p&gt;

&lt;p&gt;Кроме того, сделал в своем проекте еще много важных вещей: прописал gitignore, настроил как надо babel, установил локально и настроил eslint, раскидал классы по отдельным модулям и переписал тесты, подключил сторонний сервис &lt;a href=&quot;https://travis-ci.org/&quot;&gt;Travis&lt;/a&gt; и вставил бейджик тревиса в ридми. Travis CI — распределённый веб-сервис для сборки и тестирования программного обеспечения, использующего GitHub в качестве хостинга исходного кода. Если честно, я не совсем понял, что он мне дает, ведь я и так собираю и тестирую всё по ходу разработки, но надо — значит надо. Скорее всего, преимущества данного сервиса становятся видны именно в случае командной работы над проектом. Поживем — увидим. Ну а пока что, Кирилл сказал прикрутить — я прикрутил.&lt;/p&gt;

&lt;p&gt;В итоге, моя (пусть и маленькая) &lt;a href=&quot;https://github.com/joisadler/algorithms-and-data-structures&quot;&gt;библиотечка с алгоритмами&lt;/a&gt; заиграла новыми красками и наконец, обрела черты нормального node.js-проекта, который не стыдно выложить на гитхаб и показать людям. Ну и на npm, естественно, тоже &lt;a href=&quot;https://www.npmjs.com/package/algorithms-and-data-structures&quot;&gt;можно ее найти&lt;/a&gt; и при желании, установить (хотя я крайне не рекомендую использовать ее для любых целей, кроме как для ознакомительных :)&lt;/p&gt;

&lt;p&gt;Далее, в качестве “итогового задания” по инструментам, Кирилл поручил мне создать и опубликовать на npm пакет, который после установки будет по команде в терминале выводить “Hello, World!”. Но раз уж я живу в Израиле, я решил поступить немного более оригинально и теперь среди всего множества хеллоуворлдов на npm-е, есть &lt;a href=&quot;https://www.npmjs.com/package/say-shalom&quot;&gt;один-единственный&lt;/a&gt;, который здоровается по-еврейски)))&lt;/p&gt;

&lt;p&gt;В общем, потрудился я на этой неделе на славу, а также узнал кучу всего нового. Как объяснил мне Кирилл, он намеренно накидывает мне как можно больше всевозможных инструментов для того, чтобы избавить меня от страха перед всем новым. На данный момент моей проблемой является то, что каждое новое слово, термин, инструмент вызывает у меня холодный пот и дрожь в коленях. При том, что после этого я иду и без особых проблем разбираюсь во всем самостоятельно, ну или после небольших наставлений ментора. То есть проблема — чисто психологического характера и поэтому решить её можно только одним способом: почаще выходить за пределы зоны комфорта и браться за все новое и сложное. Отныне, моя установка должна быть: “О! Новый инструмент/язык/проект/задача…! Круто! Дайте две! Пойду и изучу!” Конечно же, такие перемены в сознании не происходят за один день, но к этому нужно всеми силами стремиться и именно этот огонь в глазах должен быть виден будущему работодателю.&lt;/p&gt;

&lt;p&gt;Теперь, когда я уже более-менее познакомился со всеми основными инструментами, я, наконец, могу приступать к освоению более практичных вещей, связанных с веб-разработкой. Моим следующим заданием будет разобраться в таких вещах, как основы tcp/ip и понятия ip адреса и порта, принцип работы протокола http, ну а после этого приступим к изучению фреймворка &lt;a href=&quot;http://expressjs.com/&quot;&gt;Express.js&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Продолжаю потихоньку почитывать “Совершенный код” Макконнелла. Вроде как теперь пошли более практичные вещи, более связанные с самим кодом, чем с общей архитектурой приложения.&lt;/p&gt;

&lt;p&gt;По подкастам: слушаю сразу несколько, попутно слежу за новыми выпусками тех, которые уже прослушал полностью. На этой неделе прослушал подкаст &lt;a href=&quot;https://www.youtube.com/user/ArtSorax&quot;&gt;Зоракса&lt;/a&gt;, большая часть которого, по сути, представляет собой просто аудиодорожки из обучающих видеороликов на youtube. Это было довольно сложно: воспринимать видеоуроки на слух и пытаться представить себе происходящее в этот момент на мониторе у автора, но по большей части, у меня это получалось. В любом случае, это был полезный и интересный опыт. Вообще, видно, что парень толковый, очень жаль, что он совсем забил на свой канал. Сейчас было бы еще, что посмотреть и что послушать. Ну, будем надеяться.&lt;/p&gt;

&lt;p&gt;А вообще, если честно, подкасты уже несколько поднадоели и хотелось бы разбавить их какими-нибудь книгами или лекциями/докладами. Но с аудиокнигами на айтишную тематику, насколько я понимаю, все совсем туго. Если вдруг сможете посоветовать что-нибудь годное послушать кроме подкастов — я буду вам искренне благодарен. Если не о программировании, то по крайней мере что-нибудь, что может быть полезно и интересно послушать программисту.&lt;/p&gt;

&lt;p&gt;Ну что ж, вроде все. Пойду теперь гуглить про устройство Всемирной паутины. Ну а вам, дорогие читатели, всего хорошего! Увидимся на следуюющей неделе!&lt;/p&gt;</content><category term="posts" /><category term="npm" /><category term="travis" /><summary type="html">Последние приготовления перед тем, как перейти непосредственно к освоению веб-разработки.</summary></entry><entry><title type="html">Неделя #10. Тесты и автоматизация.</title><link href="/week10/" rel="alternate" type="text/html" title="Неделя #10. Тесты и автоматизация." /><published>2017-07-10T09:00:00+03:00</published><updated>2017-07-10T09:00:00+03:00</updated><id>/week10</id><content type="html" xml:base="/week10/">&lt;p&gt;Всем привет!&lt;/p&gt;

&lt;p&gt;На этой неделе &lt;del&gt;уже по традиции&lt;/del&gt; я не располагал достаточным количеством свободного времени для учебы, поэтому продвигался медленнее, чем хотелось бы. Однако, как говорил философ Конфуций: “не важно, как медленно вы идете, до тех пор, пока вы не остановитесь”. А поскольку останавливаться я пока не собираюсь, можно считать, что все идет по плану и нужно только лишь набраться терпения.&lt;/p&gt;

&lt;p&gt;На выходных тоже был немножко балаган, но тем не менее я успел немного поработать над своим учебным проектом и узнать кое-что очень важное.&lt;/p&gt;

&lt;p&gt;Во-первых, я использовал в своей работе такой полезный и нужный инструмент, как &lt;a href=&quot;http://gulpjs.com&quot;&gt;Gulp&lt;/a&gt;. С его помощью мне удалось автоматизировать процесс транспиляции моих исходных файлов из es6 в es5. Конечно же, возможности галпа не ограничиваются только этим. Gulp — это очень мощный инструмент, так называемый сборщик проектов, который позволяет автоматизировать рутинные задачи и многократно ускорить работу разработчика. После установки галпа в свой проект, в специальном javascript-файле под названием gulpfile нужно прописывать так называемые таски, то есть задачи, которые будут выполняться при его запуске. Сам по себе галп из коробки ничего не умеет, для каждой отдельной задачи следует устанавливать соответствующие плагины, однако этих плагинов написано уже тысячи на все случаи жизни. В общем, тема полезная и интересная, буду дальше пользоваться и изучать более глубоко.&lt;/p&gt;

&lt;p&gt;Самым главным моим достижением на выходных стало то, что я наконец-то начал разбираться в теме модульного тестирования. Конечно же, для начала я немного пробежался по теории: узнал, что такое вообще тесты, почему они так важны, в чем разница между модульным (юнит-) и интеграционным тестированием, какие бывают основные фреймворки для тестирования. Чувствую, что потратил на это недостаточно времени и есть еще много пробелов, которые предстоит восполнить, но поскольку сейчас для меня все таки важнее практика, я решил не зацикливаться слишком долго на теории и побыстрее опробовать тесты в работе. А с теоритической частью буду дальше разбираться по ходу, по мере необходимости.&lt;/p&gt;

&lt;p&gt;Ранее, после написание очередной функции или метода в своей библиотеке, я проверял ее работу, прописывая в конце файла console.log, внутри которого содержалось выражение, так или иначе использующее в себе мою функцию. В этом и заключалось все мое тестирование. Теперь же я подошел к делу как настоящий профессионал. Во-первых, установил себе фреймворк для тестирования &lt;a href=&quot;https://facebook.github.io/jest/&quot;&gt;Jest&lt;/a&gt;, который, насколько я понимаю, используется и в среде разработки на сайте Хекслета, хотя могу и ошибаться. Jest написан разработчиками из Фейсбука на основе другого фреймворка — Jasmine и на сегодняшний день является, типа, одним из передовых. Также я создал отдельную директорию для тестовых файлов. Опять же, пришлось повозиться с импортом. Нода наотрез отказывается работать с es6-модулями, которым на Хекслете учат изначально, поэтому пришлось вникать в CommonJS. В итоге все таки у меня получилось связать мой первый тест с исходником, команда npm test сработала и когда, наконец, я увидел в консоли знакомые зелёные буковки “1 passed”, я испытал просто ни с чем не сравнимое блаженство)))&lt;/p&gt;

&lt;p&gt;Конечно, все это только начало, впереди еще очень много работы. много всего предстоит понять и изучить, прежде, чем я смогу полноценно использовать технику TDD в своей работе, но самое сложное - это начало и дай бог, дальше будет проще.&lt;/p&gt;

&lt;p&gt;По книгам: домучил, наконец-то &lt;a href=&quot;http://www.ozon.ru/context/detail/id/7360633/&quot;&gt;“Идеального программиста”&lt;/a&gt; Роберта Мартина и теперь взялся за &lt;a href=&quot;https://www.ozon.ru/context/detail/id/138437220/&quot;&gt;“Совершенный код”&lt;/a&gt; Стива Макконнелла. По поводу Мартина все как-то непонятно. Книга, несомненно, хорошая и стоящая, но мне как-то с самого начала заходила с большим скрипом. Большую часть книги автор пишет о вещах, связанных с работой в коллективе, о каких-то гибких методологиях и циклах разработки программного продукта, в общем — о вещах, которые мне, как новичку не близки и незнакомы. Безусловно, есть там моменты, которые будут полезны любому программисту на любом этапе. Например, автор активно продвигает в массы методологию TDD (разработки через тестирование) и это на самом деле очень крутая штука, которую желательно впитывать с самого начала. Но в целом, думаю, что от прочтения этой же книги через год-другой я смогу извлечь гораздо больше пользы, чем на данный момент. Хотя может быть, я и ошибаюсь. Не зря же Кирилл все время активно пинал меня по поводу этой книги.&lt;/p&gt;

&lt;p&gt;Про “Совершенный код” пока ничего не могу сказать. Пока что я ещё только в начале, где опять же обсуждаются вещи, более полезные для менеджеров и архитекторов проекта, а не для зелёных джунов. Но судя по отзывам, данный труд вот уже много лет является чуть ли не Библией для разработчиков всех мастей. Да и одно только содержание уже завораживает. И судя по нему, там как раз будет очень много практических вещей, так что будем читать и совершенствоваться.&lt;/p&gt;

&lt;p&gt;Давно не писал ничего по поводу аудио. Закончил слушать &lt;a href=&quot;https://soundcloud.com/web-standards&quot;&gt;Веб-стандарты&lt;/a&gt; (кстати, 62 выпуск — самый интересный, советую ;) и снова начал искать что-нибудь интересное и познавательное на тему фронтенда и программирования вообще. Пока что, лучшее из всего, что нашёл — это &lt;a href=&quot;http://frontflip.me&quot;&gt;Frontflip&lt;/a&gt;. Здесь действительно можно узнать много нового и полезного. Если Веб-стандарты — это больше про новости и про аналитику, то Frontflip это больше именно образовательный подкаст. Почти в каждом выпуске есть гость, который хорошо разбирается той или иной теме и выпуск целиком посвящается именно ей. Например, первый (а точнее — нулевой, как у тру-программеров)) эпизод был как раз посвящён тестированию. В общем, штука классная, но на данный момент есть всего 20 выпусков и последний был почти год назад. Этого мне хватит всего на неделю, даже меньше. Надеюсь, ребята еще активизируются, поскольку всё у них получается очень круто и потенциал есть большой.&lt;/p&gt;

&lt;p&gt;Зато на этой неделе я наткнулся на &lt;a href=&quot;http://5minreact.ru/24-podcasts/&quot;&gt;вот такой&lt;/a&gt; обзор и на &lt;a href=&quot;https://github.com/AveVlad/russia-it-podcast&quot;&gt;вот такую&lt;/a&gt; подборку подкастов, так что слушать мне теперь — не переслушать )))&lt;/p&gt;

&lt;p&gt;Вот и всё на данный момент. Надеюсь и дальше буду продвигаться. Пусть и медленно, но самое главное — в правильном направлении. А уж об этом точно позаботится мой наставник.&lt;/p&gt;

&lt;p&gt;להתראות ושבוע טוב לכולם! :)&lt;/p&gt;</content><category term="posts" /><summary type="html">Продолжаю знакомиться с инструментами и заниматься настройкой окружения.</summary></entry><entry><title type="html">Неделя #9. Наконец-то практика!</title><link href="/week9/" rel="alternate" type="text/html" title="Неделя #9. Наконец-то практика!" /><published>2017-07-03T07:50:00+03:00</published><updated>2017-07-03T07:50:00+03:00</updated><id>/week9</id><content type="html" xml:base="/week9/">&lt;p&gt;Впервые за долгое время мне не стыдно начинать писать еженедельный пост, поскольку на этот раз действительно есть, чем похвалиться. Не то чтобы я сделал что-то грандиозное: создал сайт или какое-нибудь там работающее приложение, однако продвижение есть и это не  может не радовать.&lt;/p&gt;

&lt;p&gt;На этой неделе главным моим  заданием было разобраться в структуре npm-пакета: каким образом он устроен, где должны лежать какие файлы, что такое package.json и для чего он нужен, что это за всякие странные файлы, начинающиеся с точки типа .eslintrs .и babelrc и в чем их предназначение. Для этого Кирилл дал мне ссылку на вот такой &lt;a href=&quot;https://github.com/hexlet-boilerplates/nodejs-package&quot;&gt;репозиторий&lt;/a&gt; и дал задание оформить мою собственную библиотеку с алгоритмами по такому же принципу, но не бездумно копируя, а только после того, как я действительно разберусь зачем нужна каждая отдельная деталь.&lt;/p&gt;

&lt;p&gt;Чтобы справиться с задачей, для начала я стал разбираться в том что такое вообще npm, пакеты и как вообще это всё работает. В этом очень помогла &lt;a href=&quot;https://docs.npmjs.com/&quot;&gt;документация&lt;/a&gt; на официальном сайте. Кстати, на самом Хекслете есть мини-курс &lt;a href=&quot;https://ru.hexlet.io/courses/javascript_setup&quot;&gt;JS: подготовка к работе&lt;/a&gt;, где тоже объясняется много полезных вещей по поводу настройки рабочего окружения и там тоже есть урок про npm, хотя, если честно, я его не совсем понял. Еще одно неплохое &lt;a href=&quot;https://www.youtube.com/watch?v=2e0hbjtUT-4&quot;&gt;видео&lt;/a&gt; по поводу npm также немного помогло мне пополнить свой “пазл” новыми фрагментами.&lt;/p&gt;

&lt;p&gt;В итоге мне хорошо зашла вся эта модель работы npm-пакетов (по крайней мере, мне так кажется). Я понял что значит пакет, понял как работают зависимости, понял зачем нужен package.json, примерно понял в чем разница между просто зависимостями и dev-dependencies.&lt;/p&gt;

&lt;p&gt;После этого стал разбираться с бабелем (или, если выражаться точно — бэйблом), его настройкой и использованием. Babel — это так называемый транспилятор или по-английски — транспайлер, задача которого состоит в том, чтобы переводить код, написанный с использованием передовых синтаксических конструкций в код, состоящий из более простого синтаксиса, понятного большему количеству браузеров, в том числе старым версиям. Для того, чтобы иметь возможность использовать его в своем проекте, недостаточно только лишь установить его вместе с нужными плагинами. Кроме этого, нужно еще настроить его, прописав нужные настройки в  специальном конфигурационном файле (тот самый загадочный .babelrc). После некоторого ознакомления, я установил себе консольную версию и опробовал бабель в работе над своим проектом. Во время работы над кодом я постоянно запускаю его в последней версии node.js и моя нода поддерживает синтаксис es6 из коробки. Однако с новым импортом модулей возникли трудности и именно здесь пригодился бабель. С его помощью я создал новый файл, который спокойно запустился и импортировал все, что было нужно. Единственное, в чем я не разобрался — это то, как автоматизировать весь этот процесс, чтобы все необходимые преобразования происходили самостоятельно. Подозреваю, что за это отвечает сборщик проекта, но как пользоваться этими сборщиками я пока еще не знаю.&lt;/p&gt;

&lt;p&gt;Кстати, на выходных я таки доделал свои связные списки до рабочего состояния. А дело вот в чем. Когда я уже закончил работу над списком, я решил добавить ему еще один метод, проверяющий: является ли список зацикленным. Соответственно, для тестирования этого метода мне понадобилось создать такой зацикленный список. И когда он был готов, я вдруг обнаружил, что исходный список, который я использовал за основу, тоже изменился! Это означало, что мои списки на самом деле не были иммутабельными, как я изначально задумывал. Я понял, что все дело в созданном мной служебном методе clone, который создавал копию списка. Я стал разбираться в чем дело и почему метод работает некорректно и узнал, что на самом деле существует два вида клонирования объектов и в моём случае нужно глубокое клонирование. В итоге, промучавшись над решением этого вопроса почти все выходные, перелопатив весь stackoverflow и перепробовав кучу способов, я так и не смог реализовать глубокое клонирование самостоятельно. Знаний на этом этапе просто не хватило. Но надо было двигаться дальше и поэтому я не нашёл другого решения кроме как подключить к своему проекту библиотеку lodash и воспользоваться её функцией deepClone. Конечно, нехорошо, наверно, поступать так в учебном проекте, но зато по крайней мере все заработало как надо и списки стали действительно иммутабельными. А заодно еще попрактиковался с es6-импортом)&lt;/p&gt;

&lt;p&gt;Вот, пожалуй, и все. Далее меня ждёт более глубокое погружение в тему пакетов, понимание того, как работают исполняемые файлы, также мне необходимо будет изучить, как подключать тесты.&lt;/p&gt;

&lt;p&gt;Кирилл говорит, что на самом деле я уже вплотную подобрался к реальной разработке и к вебу и что этот месяц должен стать для меня прорывным. Будем на это надеяться, профессионалу со стороны виднее)&lt;/p&gt;

&lt;p&gt;Ну и учиться, учиться и еще раз учиться!&lt;/p&gt;</content><category term="posts" /><summary type="html">Йось, все фигня, давай по-новой!</summary></entry><entry><title type="html">Неделя #8. Разворот на 180°.</title><link href="/week8/" rel="alternate" type="text/html" title="Неделя #8. Разворот на 180°." /><published>2017-06-26T17:30:00+03:00</published><updated>2017-06-26T17:30:00+03:00</updated><id>/week8</id><content type="html" xml:base="/week8/">&lt;p&gt;Ну вот и всё. Так быстро и незаметно подходит к концу второй(!) месяц моего самостоятельного обучения программированию под присмотром Кирилла из Хекслета.  И наверно, на этом этапе уже можно попытаться подвести какие-то промежуточные итоги.&lt;/p&gt;

&lt;p&gt;Если говорить честно, то до сих пор всё шло не совсем так, как я ожидал.   С одной стороны, за это время я действительно узнал очень много нужных и важных вещей. Такого количество информации, которое успел переработать мой мозг за эти пару месяцев, мне раньше не доводилось усваивать и за полгода. Я успел прочесть несколько хороших книг, дающих фундаментальные и незаменимые знания по вопросам, связанным с программированием и саморазвитием. Я прошел несколько курсов в сети по работе с такими важными инструментами, как гит и гитхаб, научился создавать статические сайты при помощи джекилла, прочел огромное количество статей в Интернете и разобрался в таких сложных темах, как алгоритмы и шифрование данных. Я хорошо прокачал свои навыки владения операционной системой Linux, научился делать многие крутые штуки в терминале (даже играть в судоку и звездные войны! ;) Я прослушал огромное количество подкастов на тему фронтенд-разработки и уверен, что это тоже было очень полезно для общего развития.&lt;/p&gt;

&lt;p&gt;Все это, конечно, очень круто и необходимо, однако, думаю, что вам, как и мне, кажется, что что-то тут не так и во всей этой истории не хватает чего-то очень важного и необходимого. Того, без чего не может обойтись ни один человек, если он действительно хочет научиться программированию: собственно, программирования!!!&lt;/p&gt;

&lt;p&gt;До старта этого проекта я обучался на Хекслете примерно в течение трех месяцев. На самом деле, четырех, но там был один вынужденный перерыв, так что с точностью можно говорить о трех. На протяжении всего этого периода моим основным занятием в свободное время являлось практическое прохождение заданий. Зачастую это давалось легко и я сразу же переходил к следующему уроку, иногда приходилось хорошенько пошевелить мозгами, бывало и такое, что над одним заданием приходилось потеть целую неделю. Но я просто не мог себе позволить сдаться и посмотреть решение учителя, ведь изначально я решил, что никогда и ни за что не буду этого делать и 100% заданий должно быть решено мною самостоятельно. Да, были взлеты и падения. Временами было очень сложно, скучно, одолевали сомнения и много раз хотелось все бросить, но все это продолжалось только до очередного прохождения всех тестов. Внезапно мир вновь обретал краски, я ощущал прилив сил и уверенности в себе и снова казалось, что программирование — самая крутая в мире вещь. Написание кода действовало на меня как наркотик. Строка за строкой я чувствовал себя волшебником, который творит чудеса и управляет железным монстром по имени Компьютер, пользуясь заклинаниями на древнем тайном языке. И все это было в кайф, несмотря на все сложности, препятствия и иногда возникающие сомнения.&lt;/p&gt;

&lt;p&gt;Но внезапно все это куда-то подевалось. Вдруг появилась вся эта лавина теории, которая поглотила меня целиком и совершенно вытеснила практику. Определенно, это не то, что подразумевал Кирилл, когда давал мне свои задания. Да и я сам представлял себе, что вот именно сейчас в мою жизнь наконец-то придёт настоящее программирование, а не просто какие-то там задачки. Но почему-то я воспринял все в каком-то ином ключе и переключился на бездумное потребление тонн информации, совершенно забросив написание кода.&lt;/p&gt;

&lt;p&gt;Кроме того, если уж говорить начистоту: я не считаю, что использую свое свободное время достаточно эффективно. Да, времени действительно не так уж много: есть и тяжелая работа и семья и необходимый отдых, и прочие жизненные обстоятельства, отвлекающие от учебы. Но блин, кого я обманываю? Ведь я прекрасно сам вижу и знаю, как много времени я до сих пор трачу на всякие глупости, не связанные с учебой. Я могу сколько угодно рассказывать другим насколько я бедный, несчастный и занятой, но ведь в глубине души я знаю, что все это фигня на постном масле и при желании я мог бы успевать намного больше за то же самое время, если бы не тратил его на всякие глупые и ненужные вещи вроде фейсбука, чтение последних новостей о том, что ел на завтрак президент Трамп во время визита в Израиль и бездумного сёрфинга в Интернете на темы, совершенно не связанные с программированием. Все это может показаться смешным и забавным, но если серьёзно задуматься, то я считаю, что это просто катастрофа и следует срочно что-то предпринимать, брать себя в руки  и мобилизироваться.&lt;/p&gt;

&lt;p&gt;В свете всего вышесказанного, я решил для себя, что с этого момента я:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Прекращаю убивать время в фейсбуке, даже если речь идет о контенте, связанном с программированием. Все последние и самые важные новости о фронтенде я могу узнать из последних выпусков подкастов и этого вполне достаточно для того, чтобы оставаться в курсе и не отставать от жизни.&lt;/li&gt;
  &lt;li&gt;Удаляю с телефона приложение Facebook и закладку на него в мобильном браузере. Одного раза в день с компа — вполне достаточно, чтобы унять ломку.&lt;/li&gt;
  &lt;li&gt;Также удаляю с телефона закладки на все новостные сайты и забываю об их существовании. В крайнем случае, о начале третьей мировой я узнаю в слаке Хекслета, ну или по ядерному грибу, растущему на горизонте за окном, так что в любом случае, ничего важного я точно не пропущу.&lt;/li&gt;
  &lt;li&gt;В ситуациях, когда программированием заняться невозможно (например, нет с собой компа) или просто уже устал и хочется почитать что-то интересное  — читать книги с телефона. Он всегда с собой: и в транспорте и в очереди на почту и даже в том самом месте, о котором вы сейчас подумали)) При этом никто не заставляет все время штудировать справочник по юниксам или по алгоритмам, это может быть и мотивационная литература и околотехническая/научно-популярная, или что-нибудь на английском, но только не постики с котиками!&lt;/li&gt;
  &lt;li&gt;Прекращаю конспектировать книги, которые читаю. Да, конспектирование это полезно и помогает лучше переварить и структурировать в голове пройденный материал, но это отнимает очень много времени, кроме того, это предполагает наличие рядом компа или тетради с ручкой и часто вместо того, чтобы просто открыть книжку с телефона и почитать 5 минут, я вместо этого лезу в Интернет: ведь у меня сейчас под рукой нет компа и я не смогу законспектировать прочитанное! Клевая отмазка, ничего не скажешь. Фтопку! Лучше прочитать 3 книги на одну тему и получить информацию из разных источников, чем за то же время успеть законспектировать лишь одну и никогда больше не возвращаться к тому, что написал. Больше чтения и меньше отговорок и напрасной траты времени.&lt;/li&gt;
  &lt;li&gt;И наконец, самое главное: начинаю писать код. Много кода! Потому, что иначе никак. Иначе — смерть меня, как программиста. Литература и прочая информация это, несомненно, нужно и важно, но основным моим направлением сейчас должна быть практика. И чем больше, тем лучше. Только программирование и его практические результаты, отображаемые на экране, способны поддерживать мою мотивацию продолжать начатое. И сейчас это должно стать моей основной задачей, краеугольным камнем, на котором зиждется все остальное.&lt;/li&gt;
  &lt;li&gt;&lt;del&gt;Начинаю, наконец, гулять с собакой!&lt;/del&gt;&lt;/li&gt;
  &lt;li&gt;Шутки шутками, но на самом деле, такие, казалось бы, совершенно не имеющие отношения к делу занятия, как прогулки с животным на свежем воздухе помогают побороть лень и приучить себя к распорядку, дисциплинированности и ответственности. Ну и заодно, немного прийти в тонус и получить необходимую порцию витамина D, которого мне так не хватает из-за ночной работы и лежачего образа жизни.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Ну а теперь, после всех своих пространных рассуждений, напишу немного о том, что успел за эту неделю. Не так уж много, но похвалиться на этот раз хотя бы есть чем. На этот раз я сосредоточился именно на практике и всю неделю разбирался с программной реализацией такой структуры данных, как односвязный список и разнообразных методов для работы с ним.&lt;/p&gt;

&lt;p&gt;Вначале я отыскал в Интернете неплохую реализацию самого списка и его узлов на JavaScript. Какое-то время у меня заняло на то, чтобы вникнуть в то, как это работает. После этого, я переписал ее по-своему, используя синтаксис es6 и реализовав то же самое в виде классов. Конечно, освежение всего этого в памяти тоже потребовало времени, особенно если учитывать, что с классами я познакомился как раз незадолго до нынешнего перерыва в практике. Затем стал добавлять по одному методы, тестируя все это дело на каждом шаге при помощи метода отладочной печати. Например, я добавил возможность добавлять и извлекать из списков узлы по заданной позиции, создавать копию и срез нужной части списка, переворачивать список, вычислять его длину, выводить на печать содержимое узлов списка и т.п. Все свои методы я написал таким образом, что их можно использовать по цепочке, применяя паттерн fluent interface, при этом исходные списки, использованные в цепочке не изменяются, а на выход отдаются их измененные копии. Эта погоня за иммутабельностью не всегда давалась легко, например, в один из дней я 12 часов подряд потратил на отладку одного единственного метода remove, поскольку его использование приводило к неожиданным сайд-эффектам. В итоге, так и не поняв в чем была причина, я плюнул и переписал функцию с нуля таким образом, чтобы она работала совершенно по другой логике. В итоге получилось даже более коротко и симпатично).
Ну и наконец когда все было готово, залил все это дело к себе на гитхаб. Так что кому интересно — можете зайти и посмотреть.&lt;/p&gt;

&lt;p&gt;В принципе, кроме списков на этой неделе я больше ничем не занимался, но по идее, так, наверно, и должно быть. И это именно то, к чему надо стремиться в дальнейшем: больше практики и меньше пустой траты времени.&lt;/p&gt;

&lt;p&gt;Ну конечно, были еще подкасты, бла-бла-бла, но это как бы само собой разумеется и особо здесь рассказывать нечего.&lt;/p&gt;

&lt;p&gt;На этом все, пойду дальше совершенствоваться в мастерстве программирования. Теперь буду заниматься тем же самым, но уже с двусвязными списками. Думаю, на основе уже имеющегося кода все будет намного проще и быстрее реализовывать. В общем, будем пробовать.&lt;/p&gt;

&lt;p&gt;Ну а вам, дорогие читатели — хорошей недели!&lt;/p&gt;</content><category term="posts" /><summary type="html">Пособие по прокрастинации от мастера или как потратить два месяца впустую, занимаясь, вроде бы, полезными вещами.</summary></entry><entry><title type="html">Неделя #7. Крик отчаяния.</title><link href="/week7/" rel="alternate" type="text/html" title="Неделя #7. Крик отчаяния." /><published>2017-06-19T04:30:00+03:00</published><updated>2017-06-19T04:30:00+03:00</updated><id>/week7</id><content type="html" xml:base="/week7/">&lt;p&gt;Приступая к написанию заголовка к данному посту, я ужаснулся: вот уже почти два месяца прошло с тех пор, как я начал вести этот блог! Всё это время я, вроде бы, как напряженно тружусь, затрачивая почти всё свободное время на самообучение. Постоянно приходится выбирать между семьей и учебой и каждый раз необходимо принимать непростые решения: ведь в любом случае нужно пожертвовать чем-то важным. Часто приходится жертвовать собственным сном и отдыхом при том, что работа у меня  с одной стороны физически тяжелая, а с другой — сопряжена с определенным риском и требует высокой концентрации внимания. Чтобы иметь возможность пообщаться со мной, коллеги должны ловить момент, ведь в основном на перерывах я всегда занят либо чтением, либо прослушиванием подкастов. Я забыл, когда в последний раз я выходил на улицу просто для того, чтобы прогуляться или заняться какой-нибудь физической активностью. Вместо этого, в выходные я весь день просиживаю взаперти за монитором, либо читая книги с телефона, отращивая живот и приобретая дефицит витамина D.&lt;/p&gt;

&lt;p&gt;И что же в итоге? Могу ли я с гордостью сказать, что действительно добился каких-либо серьёзных успехов в программировании за всё это время? Да, я узнал много нового, научился пользоваться разными полезными инструментами вроде джекила и гитхаба, немного освоился в терминале линукса, прочел несколько хороших книг и получил представление о том, что такое алгоритмы и для чего они нужны. Я прослушал неимоверное количество подкастов о веб-разработке и теперь всегда смогу поддержать разговор на темы “Safari — это новый IE” и “будут ли поддерживаться гриды в 2017?”. Но все это ни о чем, ведь когда речь заходит о практике, я как был полным нулем — так и остался им. Когда люди узнают о том, что я учусь на веб-разработчика, то чаще всего сразу же спрашивают:  “а какие фреймворки используешь?”.  Какие фреймворки? Я не знаю, что такое фреймворки, я никогда не видел в живую ни одного из них. Я и кодить-то толком не научился на нативном JS, на написание простейшей быстрой сортировки у меня уходит целый день. Каждый стандартный метод для работы с массивами я загугливаю по 10 раз и после этого он снова благополучно вылетает у меня из головы. Наконец, у меня нет ни одного готового сайта, даже самого простого, который я мог бы с гордостью показать друзьям и знакомым. (Этот — не в счёт, ведь его, по сути, сделала за меня одна бездушная программа, написанная на языке Ruby). И всё это — потому, что мое обучение построено таким образом, что оно состоит на 95% из теории и, дай Бог, если в нем есть хотя бы 5% практики.&lt;/p&gt;

&lt;p&gt;Проанализировав все вышесказанное, я пришел к выводу, что надо срочно что-то менять, поскольку моя бедная мотивация, до сих пор державшаяся на последнем издыхании, теперь и вовсе забилась в предсмертных конвульсиях.&lt;/p&gt;

&lt;p&gt;Во время последней нашей синхронизации с Кириллом, я пожаловался на полное отсутствие практики и был удивлен услышать, что на самом деле, он тоже не понимает, почему я трачу столько времени на чтение, ведь, когда он советовал мне определенные книги, то не имел в виду, что я должен прочитывать их от корки до корки и тем временем забивать на все остальное. Например, в случае с алгоритмами подразумевалось, что я буду пытаться на практике реализовать некоторые из них и, по мере надобности, обращаться за информацией к книге. С другой стороны, Кирилл объяснил мне, что он мог бы прямо сейчас научить меня как поднимать сайты и прочим практическим вещам, но это было бы не совсем верным решением. Да, если правильно выполнять все задания, заручившись при этом поддержкой учителя, то всё, безусловно, получится и я на какое-то время почувствую себя героем. Но что случится в следующий раз, когда мне придётся столкнуться с подобной задачей самому? Шаг влево, шаг вправо — и вот уже я в панике перед возникшими ошибками! Чтобы избежать подобных ситуаций, мне требуется проделать еще очень много подготовительной работы. В первую очередь научиться работать с ошибками и выработать в себе навык первым делом всегда обращаться к документации. Понять принципы работы операционной системы и научиться конфигурировать ее самостоятельно, поскольку это, как ничто другое,  способствует выработке правильного программистского мышления. Для того, чтобы хорошо разобраться во всех тонкостях моей убунты, Кирилл посоветовал книгу “&lt;a href=&quot;https://www.ozon.ru/context/detail/id/31924164/&quot;&gt;Unix и Linux. Руководство системного администратора&lt;/a&gt;”, однако еще раз предупредил, что ни в коем случае её не нужно прочитывать от корки до корки. Просто использовать, как справочник, время от времени углубляясь в необходимые темы по мере возникновения вопросов.&lt;/p&gt;

&lt;p&gt;В плане практики сейчас от меня требуется самостоятельно реализовывать на JS некоторые алгоритмы, начиная с самых простых, таких как сортировка пузырьком и быстрая сортировка, потом, по мере продвижения Кирилл будет говорить, за какие алгоритмы и структуры данных браться дальше. Для этих целей я создал у себя отдельный &lt;a href=&quot;https://github.com/joisadler/algorithms-and-data-structures&quot;&gt;репозиторий&lt;/a&gt; на Гитхабе, где буду сохранять все это дело. Думаю, в будущем пригодится, хотя бы для того, чтобы работодатель смог увидеть, что я хотя бы что-то знаю и умею. Кое что уже успел сделать и закоммитить, теперь продолжаю двигаться в данном направлении.&lt;/p&gt;

&lt;p&gt;Пока больше особо рассказывать нечего, но надеюсь, что теперь стану продвигаться намного быстрее именно в плане практики и в следующий раз уже действительно будет, чем похвалиться. Ну а пока что — всем хорошей недели!&lt;/p&gt;</content><category term="posts" /><summary type="html">И тут я начал понимать, что что-то тут не так...</summary></entry><entry><title type="html">Неделя #6. Книги — наше всё.</title><link href="/week6/" rel="alternate" type="text/html" title="Неделя #6. Книги — наше всё." /><published>2017-06-12T10:00:00+03:00</published><updated>2017-06-12T10:00:00+03:00</updated><id>/week6</id><content type="html" xml:base="/week6/">&lt;p&gt;Очередная неделя пролетела очень быстро. Даже оглянуться не успел, как уже опять понедельник, так что пора выкладывать новый пост.&lt;/p&gt;

&lt;p&gt;На этой неделе не происходило ничего особенно примечательного. Продолжаю планомерное продвижение к своей цели. В основном, в свободное от работы время занимался чтением обучающей и развивающей литературы и конспектированием прочитанного.&lt;/p&gt;

&lt;p&gt;Закончил читать “Грокаем Алгоритмы”. Книга оказалась действительно полезной и интересной. Несмотря на свой небольшой объём, она охватывает огромное количество тем, подготавливая новичка к трудному и опасному путешествию в неизведанный мир алгоритмов и структур данных. Конечно, ни одна из тем в книге не затрагивается слишком глубоко, но она и не претендует на статус учебника или справочника, являясь, скорее, просто аперитивом, подаваемым перед основным блюдом с целью возбуждения аппетита. Если кому-то интересно, то вот &lt;a href=&quot;https://coggle.it/diagram/WSxZx6kbTwAB6E3V/6af82ac3efb6fffb6b65ae261df24a29a40b37ed4720661120026493b8286372&quot;&gt;ссылка&lt;/a&gt; на окончательный вариант моего конспекта по книге.&lt;/p&gt;

&lt;p&gt;Далее принялся за книгу Томаса Кормена “&lt;a href=&quot;http://www.ozon.ru/context/detail/id/24903185/&quot;&gt;Алгоритмы. Вводный курс&lt;/a&gt;”, которую посоветовал мне Кирилл. Пару месяцев назад я уже предпринимал попытку взяться за Кормена, но тогда особо далеко не продвинулся, поскольку испугался математических формул со страшными и непонятными логарифмами. Так уж вышло, что с математикой у меня в жизни не сложилось. Дело даже не в том, что лично я считаю себя сферическим гуманитарием в вакууме и всегда больше тяготел к литературе и философии, чем к точным наукам. На самом деле, в школе у меня абсолютно не было проблем с геометрией и алгеброй. Может быть, я и не был круглым отличником, но уж точно твердым хорошистом… Ровно до тех пор, пока в 8 классе не перешёл учиться в новую школу. Здесь меня сумели здорово идеологически обработать, мои приоритеты очень сильно сместились и в какой-то момент я просто напросто забил на все, кроме изучения еврейского языка, истории и религиозных традиций. Только эти вещи казалось мне важными и стоящими. А математика, физика? Да кому они вообще нужны в жизни? А если даже и понадобятся, то я парень не глупый и быстро все что надо выучу. Вот с такими вот установками я закончил школу и, фактически, мои познания в математике навсегда остались где-то на уровне 8-го класса. И теперь, в придачу ко всем сложностям, приходится наверстывать упущенное, разбираясь в таких простых и банальных вещах как, например, логарифмы. Но делать нечего: надо — значит надо.&lt;/p&gt;

&lt;p&gt;Теперь немного о саморазвитии.
Некоторое время назад, когда я разбирался с гитом, я бродил по просторам Интернета, пытаясь найти каких-нибудь годных видеоматериалов в дополнение к тому курсу, что я проходил. Поиск привёл меня на GeekBrains, где вроде бы нашелся неплохой курс по git. В итоге по каким-то причинам, я его так и не посмотрел, но зарегистрироваться на сайте все же успел. Успел и забыл. Но на этой неделе, наводя порядок в своём почтовом ящике, я обнаружил, что во время регистрации я, оказывается, получил в подарок ссылки на бесплатное скачивание  с ozon.ru трёх книг по саморазвитию. Ну а раз уж получил, то грех не скачать и не прочитать. Пока что прочёл две из них. Первая книга — Саймона Хартли “А у меня получится?”. Честно говоря, мне не сильно понравилось. На протяжении всей книги автор мусолит одну и ту же идею: вместо того, чтобы сомневаться в своих великих целях, просто берись и начинай их добиваться. Причём, чем более сумасшедшими они будут, тем лучше. Ну ок. Идея, может быть хорошая и правильная, но нафига размазывать все это на 200 страниц? В общем, пару часов, потраченных на это чтиво, считаю упущенными. Впрочем, может быть, кому-то понравится.&lt;/p&gt;

&lt;p&gt;Вторая книга — Ицхака Пинтосевича “Создавай. Хорошие привычки за 30 дней”. Сама по себе, книжка, может быть и неплохая и содержит в себе довольно много ценной информации, но так как я уже знаком с другими книгами этого автора, я просто не узнал из неё ничего принципиально нового. Однако другим однозначно могу советовать читать Пинтосевича.
 Третья книга — тоже его авторства и рассказывает о том, как правильно ставить цели. Её я пока что читать не стал, т.к. во-первых, на это просто не хватает времени: ведь я тут, вроде, как бы еще и программированием занимаюсь) Ну и потом, я уже знаком с этой темой из других его книг и видеороликов на YouTube, поэтому, опять же, не думаю, что узнаю из книги что-то принципиально новое. А времени у меня и так в обрез.&lt;/p&gt;

&lt;p&gt;Что касается аудио: продолжаю слушать Веб-стандарты. Нашёл еще парочку хороших русскоязычных подкастов о веб-разрабоке: &lt;a href=&quot;https://m.soundcloud.com/frontend-weekend/&quot;&gt;Frontend Weekend&lt;/a&gt; и &lt;a href=&quot;http://fronterki.fm/&quot;&gt;Фронтёрки&lt;/a&gt;. Все круто и интересно, но оба подкаста еще довольно новые и в каждом есть всего по несколько выпусков. В любом случае, подписался и буду следить за обновлениями. Также, по совету Frontmaker-а глянул подкаст на английском &lt;a href=&quot;https://devchat.tv/&quot;&gt;Devchat&lt;/a&gt;. У них есть несколько рубрик по разным темам, связанным с разработкой и просто неимоверное количество выпусков. Сейчас слушаю записи из рубрики “My JavaScript Story”, но больше одного-двух выпусков в день не получается. Пока что тяжеловато воспринимать на слух быструю речь.&lt;/p&gt;

&lt;p&gt;Немного активнее стал прокачивать свой английский, зарегался в Фейсбуке в нескольких группах по языковому обмену, и даже нашел интересных собеседников, желающих прокачать русский или иврит, а взамен помочь с английским. Один из них, например, оказался начинающим разработчиком под Android и iOS, недавно переехавшим жить в Израиль из США. Так что общих тем у нас оказалось довольно много и мы договорились, что будем время от времени чатиться в Ватсапе, а в дальнейшем, может быть и походим вместе на какие-нибудь местные митапы. Но блин! Я реально не представляю, откуда брать время еще и на подобного рода общение. Даже как-то неудобно получается…&lt;/p&gt;

&lt;p&gt;Ну вот и все. Как видите сами, неделя выдалась не самой продуктивной в плане практики, но будем надеяться, что положение вскоре исправится.&lt;/p&gt;</content><category term="posts" /><summary type="html">(Так думал я...)</summary></entry><entry><title type="html">Неделя #4-5. Боль и алгоритмы.</title><link href="/week4-5/" rel="alternate" type="text/html" title="Неделя #4-5. Боль и алгоритмы." /><published>2017-06-05T04:10:00+03:00</published><updated>2017-06-05T04:10:00+03:00</updated><id>/week4-5</id><content type="html" xml:base="/week4-5/">&lt;p&gt;Так получилось, что на прошлой неделе у меня практически не было возможности нормально заняться учебой и похвалиться было особо даже нечем, по крайней мере, на полноценный пост материала точно не хватало. Поэтому я решил объединить две записи в одну и рассказать здесь о том, что я успел за все это время.&lt;/p&gt;

&lt;p&gt;Как я уже говорил, в начале прошлой недели я собирался полностью погрузиться в прохождение курсов на Хекслете. Но для начала я решил, что неплохо было бы немного повторить уже изученный материал, поскольку с момента моей последней активности на сайте прошел почти целый месяц. Поэтому в свободное от работы время я начал потихоньку просматривать видеоуроки из курсов, которые уже успел пройти, а именно: &lt;code class=&quot;highlighter-rouge&quot;&gt;JS: Составные данные&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;JS: Последовательности&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;JS: Программирование, управляемое данными&lt;/code&gt; и &lt;code class=&quot;highlighter-rouge&quot;&gt;JS: Коллекции&lt;/code&gt;. После просмотра каждого урока я стал открывать задания и просматривать свои уже готовые решения, но тут меня ждал откровенный облом: внезапно я осознал, что вообще не в состоянии понять, как работает мой собственный код! Такое впечатление, будто я видел его впервые в жизни. Я просто не могу передать словами то, что творилось у меня в голове в тот момент. Задание за заданием я продолжал пребывать в полнейшем ступоре и чем дальше, тем больше я стал погружаться в отчаяние.&lt;/p&gt;

&lt;p&gt;Для полноты картины стоит, наверное, добавить, что примерно в это же время мне пришлось перенести сложное удаление зуба. Примерно в течение часа &lt;del&gt;живодер&lt;/del&gt; доктор пытался поломать его всевозможными приспособлениями, включая даже шило (о_0), а затем извлекал осколки один за другим, изрядно расковыряв там все, что можно. Как и следовало ожидать, на следующий день все это дело инфицировалось, воспалилось и заболело так, что мама дорогая! Чтобы хоть как-то продолжать жить и работать, я был вынужден закидываться просто неимоверным количеством всевозможных болеутоляющих средств. Подозреваю, что по большей мере именно из-за них мне было так сложно сосредоточиться на учёбе и что-либо понять. Все это время мое сознание было каким-то затуманенным и я был просто не в состоянии сконцентрировать свое внимание на чем-либо. В общем, ощущение не из приятных. Да и боль сама по себе отвлекает в немалой степени, заставляя все время думать только о ней, а не об учёбе. Сейчас уже, слава богу, чувствую себя получше, пью гораздо меньше таблеток и голова потихоньку проясняется.&lt;/p&gt;

&lt;p&gt;В любом случае, время уходило и надо было срочно принимать решение, что предпринимать дальше. Я связался с Кириллом и он посоветовал пока что оставить курсы в покое и сосредоточиться на теме алгоритмов, поскольку данная тема является архиважной: как в дальнейшей работе, так и на собеседованиях. Никто не требует, чтобы я знал наизусть всего Кормена и был готов — разбуди меня посреди ночи — набросать на салфетке 5 видов сортировки. Но я должен хорошо ориентироваться хотя бы в базовых алгоритмах, иметь понятие о временной сложности и знать, как выбирать тот или иной алгоритм в зависимости от ситуации, уметь работать со списками и обрабатывать деревья.&lt;/p&gt;

&lt;p&gt;Поэтому на данный момент я полностью погрузился именно в тему алгоритмов. Начал с книги Адитьи Бхаргавы “&lt;a href=&quot;http://www.ozon.ru/context/detail/id/139296295/&quot;&gt;Грокаем алгоритмы&lt;/a&gt;”. Книга очень крутая и понятная, написана специально для новичков и представляет собой иллюстрированное пособие (автор является сторонником визуальной подачи информации). Несмотря на её кажущуюся простоту и относительно небольшой объем, книга охватывает огромное количество важных тем. Конечно, сильного углубления в каждую из тем не происходит, но ведь по сути, это лишь вводное пособие, вслед за которым уже можно углубляться в более серьёзную литературу.&lt;/p&gt;

&lt;p&gt;Все примеры кода в книге даются на языке Python, однако на гитхабе автора имеется специальный &lt;a href=&quot;https://github.com/egonSchiele/grokking_algorithms&quot;&gt;репозиторий&lt;/a&gt;, где все те же примеры реализованы на многих других языках: таких, как Java, C#, PHP, Ruby и других. Ну и конечно же, на моём родном JS :) Посоветовавшись с учителем, я решил, что сейчас не стоит терять время, пытаясь вникнуть в код на пайтоне. Конечно же, очень важно знать и работать с как можно большим количеством языков, дабы избегать деформации в мышлении и Кирилл в дальнейшем планирует погружать меня в другие языки для общего развития, но пока что стоит сосредоточиться на главном, меньше отвлекаясь на детали. Поэтому я поступил следующим образом: форкнул себе репозиторий с кодом, клонировал его локально себе на комп и теперь разбираюсь в примерах сразу на джаваскрипте, попутно переписывая код со старого синтаксиса на более знакомый мне ES6. Если все получится хорошо — а у меня получится — то потом сделаю пул-реквест и предложу автору своё дополнение. Таким образом, у меня заодно ещё и есть шанс поучаствовать в реальном опенсорсном проекте :)&lt;/p&gt;

&lt;p&gt;Кстати, для локальной работы с кодом я наконец-то нашёл время и худо-бедно настроил под себя редактор &lt;code class=&quot;highlighter-rouge&quot;&gt;Atom&lt;/code&gt;, которым до этого вообще практически не пользовался. Правда, полдня пришлось провозиться с линтером &lt;a href=&quot;http://eslint.org/&quot;&gt;Eslint&lt;/a&gt;, чтобы заставить его, наконец работать и указывать на ошибки в реальном времени. Конечно, я еще не до конца разобрался в том, как работать с его конфигурационным файлом и осуществлять тонкую подстройку линтера под собственные нужды, но, по крайней мере, хоть как-то работает,  — уже хорошо. В общем, потихоньку разбираюсь в работе редактора, нахожу каждый день какие-нибудь новые полезные фишки, упрощающие работу с кодом.&lt;/p&gt;

&lt;p&gt;Ещё одной полезной находкой для меня стал сервис &lt;a href=&quot;https://coggle.it/&quot;&gt;Coggle&lt;/a&gt;,  позволяющий строить интеллект-карты в онлайн режиме и делиться ими с остальными. Инструмент очень продуманный содержит в себе много полезных плюшек: таких, как возможность совместного редактирования, историю изменений, а также код для вставки карты в страницу собственного сайта. В продвинутой версии присутствует намного больше возможностей, но мне для моих целей вполне хватает и того, что предлагает бесплатная версия.&lt;/p&gt;

&lt;p&gt;Познакомившись поближе с Coggle, я понял, что это просто идеальный инструмент для конспектирования книг и мною было принято решение отныне создавать карту по каждой прочитанной книге, сохраняя в удобной форме все главные идеи, дабы в будущем всегда иметь возможность вернуться и быстро повторить пройденное. Надеюсь, это будет полезно не только мне, но и всем остальным.&lt;/p&gt;

&lt;p&gt;Поделюсь тем, что я уже успел сделать на данный момент (комментарии приветствуются):&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;iframe width=&quot;100%&quot; height=&quot;480&quot; src=&quot;https://embed.coggle.it/diagram/WSxZx6kbTwAB6E3V/6af82ac3efb6fffb6b65ae261df24a29a40b37ed4720661120026493b8286372&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Карта еще не полная, но по мере прочтения книги буду добавлять сюда новую информацию.&lt;/p&gt;

&lt;p&gt;Продолжаю слушать во время работы тематические подкасты. Прослушал уже все 48 выпусков &lt;a href=&quot;https://radiojs.ru/&quot;&gt;RadioJS&lt;/a&gt;, имеющиеся на данный момент и теперь принялся за &lt;a href=&quot;https://soundcloud.com/web-standards&quot;&gt;Веб-стандарты&lt;/a&gt;. Эти ребята более продуктивные: выходят четко каждую неделю и за полтора года успели записать уже 70 выпусков, так что мне хватит еще надолго). Хорошо бы было найти еще что-нибудь хорошее и несложное из подкастов на английском, чтобы учиться воспринимать речь на слух. Если можете что-нибудь посоветовать — пишите в комментариях к посту или в личку, буду вам за это очень благодарен.&lt;/p&gt;

&lt;p&gt;На этом пока что, наверно, все. Успел не так уж и много, но с другой стороны, если учитывать обстоятельства и острую нехватку времени, то все довольно таки неплохо. Буду и дальше продвигаться в своём тихом темпе, стараясь прилагать максимум усилий, а терпение и труд, как говорится, все перетрут :)&lt;/p&gt;

&lt;p&gt;А пока что, всем пока и до встречи на следующей неделе!&lt;/p&gt;</content><category term="posts" /><summary type="html">О том, как маленький зуб одолел большого Йоси.</summary></entry><entry><title type="html">Неделя #3. Все идет по плану.</title><link href="/week3/" rel="alternate" type="text/html" title="Неделя #3. Все идет по плану." /><published>2017-05-22T04:10:00+03:00</published><updated>2017-05-22T04:10:00+03:00</updated><id>/week3</id><content type="html" xml:base="/week3/">&lt;p&gt;К сожалению, эта неделя в плане учебы выдалась для меня не настолько продуктивной, как две предыдущие. Всю “рабочую” часть недели я был настолько загружен делами, что не нашёл времени на то, чтобы даже ненадолго открыть свой ноутбук (как бы стыдно мне не было в этом признаться). Тем не менее, это не означает, что я совсем уж потерял время без пользы. Просто ту малую часть свободного времени, которое у меня остаётся, я пытаюсь использовать максимально эффективно.&lt;/p&gt;

&lt;p&gt;Во-первых, во время работы и по дороге на нее я продолжаю прослушивать подкаст о веб-разработке RadioJS. Просто добавил сразу все выпуски в свой плейлист и пока я работаю на конвеере, они себе потихоньку подгружаются и проигрываются один за другим. На данный момент успел прослушать таким образом уже примерно 2/3 всех выпусков. Не могу сказать, что я понимаю абсолютно все темы, которые обсуждаются в подкасте, но несмотря на это, буквально с каждым выпуском я узнаю что-то новое и полезное для себя. Очень интересно слушать гостей, которые рассказывают о себе и о своей работе, об инструментах, которые они  разрабатывают и о тех, которые они сами используют. Также очень полезная, на мой взгляд,  рубрика, в которой ведущие рассказывают о пиках — собственных находках и открытиях, сделанных ими в последнее время. Пусть многое из этого пока для меня нерелевантно, да и названия инструментов, скорее всего, вылетят из головы, но когда-нибудь в будущем, если я столкнусь с похожей проблематикой в своей работе, я могу вспомнить, что где-то я уже слышал, что такая штука существует и найти её в гугле не составит труда. Например, недавно я узнал из пиков о маленьком фреймворке под названием RTLCSS, который автоматически находит и  “отзеркаливает” нужные стили на сайте если производится переключение на язык с левосторонним направлением письма (т.е. справа на лево). Поскольку я живу в Израиле, население которого преимущественно говорит на иврите и на арабском (оба эти языка — именно такие), я предполагаю, что этот и подобные ему инструменты в будущем пригодятся мне еще не раз.&lt;/p&gt;

&lt;p&gt;Также в свободное время, например в рабочих перерывах, я стараюсь читать книги. Список книг к прочтению у меня накопился уже достаточно большой, Кирилл тоже все время подкидывает мне что-то новое, поэтому даже не знаю, за что хвататься в первую очередь. На данный момент заканчиваю “Идеального программиста” Роберта Мартина, затем, наверное примусь за вводную литературу по алгоритмам.&lt;/p&gt;

&lt;p&gt;Конечно, мне не чуждо ничто человеческое и “злое начало” время от времени принимается убеждать меня в том, что я устал и все равно не способен в данный момент сконцентрироваться на учебе, поэтому лучше просто залипнуть на Facebook или почитать новости. Но в этом плане я тоже все предусмотрел заранее :) Вообще-то, я ничего не имею против фейсбука: на самом деле это — очень полезный инструмент, который помогает мне в считанные минуты и часы доносить нужную информацию до сотен друзей в разных уголках мира, узнавать их мнение по волнующим меня вопросам и спрашивать совета. Но чтобы не терять времени впустую и не тонуть в море лишней и бесполезной информации, где-то полгода назад я отписался (не расфрендил, а именно отписался) от большинства друзей, оставив в ленте только действительно самых близких мне людей и сосредоточил своё внимание на группах и страницах, связанных с JavaScript, веб-разработкой и IT-тематикой вообще. Поэтому теперь даже отдыхая, я все равно так или иначе узнаю кое-что новое и интересное. А чтение новостей я вообще сократил до минимума и занимаюсь этим только в такие моменты, когда действительно сильно устал и сил на восприятие чего-либо серьёзного уже не остаётся.&lt;/p&gt;

&lt;p&gt;Что касается практики — на выходных я наконец-то до конца разобрался с тем, как правильно прикрутить к сайту комментарии при помощи стороннего сервиса &lt;a href=&quot;https://disqus.com&quot;&gt;Disqus&lt;/a&gt;. Кроме того, я заменил стандартную и невзрачную тему &lt;code class=&quot;highlighter-rouge&quot;&gt;minima&lt;/code&gt; на нечто более привлекательное и приятное для глаза. Новая темка называется &lt;code class=&quot;highlighter-rouge&quot;&gt;DevJournal&lt;/code&gt; и, на мой взгляд, она больше подходит по духу, раз уж я тут пишу о программировании.&lt;/p&gt;

&lt;p&gt;И то и другое заняло достаточно много времени, поскольку я действительно хотел, чтобы вышло красиво, а не абы как. Пришлось вспомнить былое и основательно покопаться в CSS-стилях сайта, поработать с инструментами разработчика и много-много гуглить. На все это ушло почти два дня, но зато я доволен результатом и теперь все-таки смогу сосредоточиться на более важных и фундаментальных вещах в учёбе и наконец-то углубиться в темы, обозначенные Кириллом как важные.&lt;/p&gt;

&lt;p&gt;На выходных я отложил в сторону все остальное и решил погрузиться в одну из таких важных тем, а именно — шифрование данных. Кирилл поставил передо мной задачу разобраться в том, что представляет из себя шифрование, каких видов оно бывает (симметричное/ассиметричное), что такое приватные и публичные ключи, как работают https и сертификаты.
Потратив пару часов на просмотр скучной &lt;a href=&quot;https://youtu.be/mE_s-R5wvpw&quot;&gt;вводной лекции&lt;/a&gt; от какого-то чувака из Яндекса, я понял, что по сути так ничего и не понял, только еще больше запутался. Поэтому далее я принялся гуглить дополнительную текстовую информацию по вышеперечисленным темам и смог нарыть довольно много хороших статей и роликов, разжевывающих для новичка саму суть вопроса. Приведу здесь несколько ссылок: те, что успел сохранить. Возможно, кому-то это тоже может пригодиться:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Текст: &lt;a href=&quot;https://theoryandpractice.ru/posts/14203-crypto-security&quot;&gt;1&lt;/a&gt; &lt;a href=&quot;https://intsystem.org/security/asymmetric-encryption-how-it-work/&quot;&gt;2&lt;/a&gt; &lt;a href=&quot;http://www.netcode.ru/cpp/?artID=4010&quot;&gt;3&lt;/a&gt; &lt;a href=&quot;https://urbanculture.in/%D0%9A%D1%80%D0%B8%D0%BF%D1%82%D0%BE%D0%B3%D1%80%D0%B0%D1%84%D0%B8%D1%8F&quot;&gt;4&lt;/a&gt; и еще: &lt;a href=&quot;https://m.habrahabr.ru/post/188042/&quot;&gt;5&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Видео: &lt;a href=&quot;https://www.youtube.com/watch?v=-YyVEgb5wII&quot;&gt;1&lt;/a&gt; &lt;a href=&quot;https://www.youtube.com/watch?v=vFjq9pID4-E&quot;&gt;2&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Ну и наконец, для верности закрепил в памяти изученное при помощи старой доброй Википедии. После всего вышеперечисленного темка, вроде как, более-менее улеглась в голове. Конечно, теперь я не превратился в спеца по криптографии и криптоанализу, но общее представление о том, как работает современное шифрование, получил. Для расширения кругозора также скачал “Книгу шифров” Сингха Саймона и добавил её в свой список к прочтению. Вроде как книжка годная, с хорошими отзывами. Надеюсь, когда-нибудь найдётся время и на нее.&lt;/p&gt;

&lt;p&gt;Самое прискорбное, на мой взгляд — это то, что с момента старта данного проекта я еще не успел пройти ни одного нового упражнения на Хекслете. Конечно, я не терял времени даром и за этот период узнал очень много новых полезных и нужных вещей. Но все же, я считаю, что с этим моментом надо срочно что-то делать, ведь так же можно и совсем разучиться программировать! И теперь, когда основная работа над блогом закончена, я надеюсь, что смогу больше сосредоточиться именно на прохождении курсов и выполнении дополнительных заданий, которые будут поступать от Кирилла.&lt;/p&gt;

&lt;p&gt;Ну что ж. Наверно, на этом пока все. Желаю всем хорошей
недели и да пребудет с вами сила!&lt;/p&gt;</content><category term="posts" /><summary type="html">Что делать, если на учебу, казалось бы, нет времени?</summary></entry><entry><title type="html">Итак, поехали! Неделя #1-2.</title><link href="/week1-2/" rel="alternate" type="text/html" title="Итак, поехали! Неделя #1-2." /><published>2017-05-15T10:01:00+03:00</published><updated>2017-05-15T10:01:00+03:00</updated><id>/week1-2</id><content type="html" xml:base="/week1-2/">&lt;p&gt;Настало время рассказать о том, чем я занимался и что успел узнать в течении последних двух недель с момента начала нашего с Кириллом марафона по сегодняшний день.&lt;/p&gt;

&lt;p&gt;Я, конечно, предполагал и знал, что придётся нелегко и спуску мне никто  давать не будет. Однако начало  взаимодействия с наставником оказалось для меня совершенно неожиданным. Скажем так, первым моим впечатлением от общения с Кириллом было таким, как будто я попал на жесткий психологический тренинг). В первую очередь, он ясно дал мне понять, что основная моя проблема на пути к становлению профессионалом это не отсутствие технических знаний и не гуманитарный склад ума. При желании, все необходимые пробелы в этом плане можно восполнить, главное - это постоянство и упорство . Но главное, на чем я должен сосредоточиться с самого начала - это работа над собой и своими личностными качествами, таким, как уверенность в себе (а у меня с этим реально катастрофа!) и готовность отстаивать собственную точку зрения, умение хорошо коммуницировать с людьми, критическое и системное мышление, авторская позиция по отношению к жизни. По словам Кирилла, именно от развития этих качеств будет зависеть моё дальнейшее продвижение и будущий поиск работы, ведь работодателю в первую очередь важно увидеть перед собой проактивного и уверенного в себе человека, не боящегося трудностей и ответственности, умеющего аргументированно отстаивать собственную позицию. И именно этим вещам я должен уделять особое внимание, если хочу добиться успеха, а все остальное — приложится при достаточном упорстве и настойчивости.&lt;/p&gt;

&lt;p&gt;Поэтому, первым делом, я занялся именно вопросом прокачки себя. Специфика моей нынешней работы такова, что я имею возможность воспринимать аудиоматериал в огромных количествах (в данный момент я работаю на конвеере, выполняя однообразную и монотонную работу, и фактически, заняты у меня только руки, в то время, как голова спокойно может воспринимать учебный материал). За последние две недели я успел скачать и прослушать две потрясающие аудиокниги. Одна из них - книга Ричарда Бренсона “К черту все! Берись и делай”. Для тех, кто не знает, Бренсон — это известный английский бизнесмен, миллиардер, основатель корпорации Virgin, которому удалось добиться всего, что он имеет благодаря одному очень важному качеству: там, где другие боятся и сомневаются, он просто берется и пробует. И добивается. И его книга именно об этом.&lt;/p&gt;

&lt;p&gt;Вторая книга - одного из известнейших тренеров личностного роста в Украине — Ицхака Пинтосевича “Уверенность в себе и ораторское мастерство”. После прослушивания данной книги-тренинга, начитанной самим автором, уверенность в себе и мотивация начинают просто зашкаливать. Кстати, у него есть еще одна аудиокнига “Действуй! 10 заповедей успеха”, которую я уже когда-то раньше читал и хотел бы теперь еще разок прослушать, но пока что, при обилии всего остального, руки еще не дошли. Также начал слушать Стивена Кови с его “7 навыками высокоэффективных людей”, но в аудиоформате она мне как-то плохо заходит. Потом, когда будет время, попробую взяться за печатный вариант.&lt;/p&gt;

&lt;p&gt;Еще Кирилл посоветовал первым делом почитать книгу Роберта Мартина “Идеальный программист”, так как там, помимо всего прочего, тоже присутствует достаточно много мотивации.&lt;/p&gt;

&lt;p&gt;Теперь давайте все же перейдем к более технической стороне.
Как и ожидалось, самым первым заданием, полученным от учителя, было создание, собственно, этого самого блога, в котором я в дальнейшем смогу постить заметки о своём продвижении. Для этого мне понадобилось познакомиться и разобраться со следующими темами и инструментами:&lt;/p&gt;

&lt;h2 id=&quot;1-Распределенная-система-контроля-версий-git&quot;&gt;1. Распределенная система контроля версий Git.&lt;/h2&gt;

&lt;p&gt;Большую часть времени я потратил именно на освоение базовых навыков пользования гитом. Это заняло достаточно много времени и потребовало очень сильной концентрации, поскольку никогда раньше я не пользовался чем либо подобным. По ходу дела, я также упражнялся в использовании командной строки Linux, оттачивая базовые команды: такие, как навигация,  создание и удаление файлов и директорий, редактирование файлов из консоли. Кстати, на линукс (а если точнее — на Ubuntu) я перешёл еще несколько месяцев назад, опять же по совету Кирилла. По сравнению с привычным мелкомягким интерфейсом здесь все кажется таким корявым и неудобным, многие вещи выглядят сырыми и недоработанными (так оно, на самом деле и есть), много всего приходится делать ручками через терминал, включая установку и обновление программ и драйверов, настройку системы и все такое прочее. Для человека с многолетним опытом использования винды все это кажется очень диким и непривычным. Но мне ясно дали понять, что если хочешь стать программистом — не стоит искать лёгких путей. Ведь ни для кого не секрет, что в основном веб-программисту приходится работать именно с машинами под управлением Unix-подобных операционных систем. Поэтому об умении обходиться с ними нужно позаботиться заблаговременно. Кроме того, основной инструментарий программиста (в том числе и Git) имеет в основном консольный интерфейс. Соответственно, умение работать с консолью является навыком первостепенной важности.&lt;/p&gt;

&lt;p&gt;Но давайте вернёмся к гиту. В ходе освоения я пользовался &lt;a href=&quot;https://git-scm.com/book/ru/v1&quot;&gt;этим учебником&lt;/a&gt; и &lt;a href=&quot;https://githowto.com/ru&quot;&gt;вот этим курсом&lt;/a&gt;, плюс разными вспомогательными видео на YouTube. Учебник очень хороший и полный, хотя местами, конечно, сложный для восприятия. Естественно, я не проходил абсолютно весь учебник: это заняло бы слишком много времени, да и многие вещи на данном этапе мне попросту не нужны. Я сосредоточился на базовых вещах: таких, как создание и клонирование git-репозиториев, индексация изменений, коммиты, работа с ветками и доступ к удаленным репозиториям. А что касается курса - вот это действительно бомба! Сам курс проходится за несколько часов, весь материал доносится в очень лёгкой и доступной форме, по ходу дела ты работаешь с собственноручно созданным репозиторием, постепенно внося туда нужные изменения. В общем, всем советую попробовать прямо сейчас!&lt;/p&gt;

&lt;h2 id=&quot;2-Генератор-статических-сайтов-jekyll&quot;&gt;2. Генератор статических сайтов Jekyll.&lt;/h2&gt;

&lt;p&gt;Jekyll — это инструмент, позволяющий создавать статические сайты наподобие блогов и лендингов буквально в пару кликов. При этом, для самого базового использования вообще не требуется каких-либо знаний о создании сайтов и о верстке. Все это система берет на себя. Поэтому пользователь имеет возможность сосредоточиться не на реализации сайта, а на самом контенте. Если говорить о блоге, то все, что требуется для добавления новых постов - это просто создавать файлы в формате маркдаун с нужным нам контентом и оформлять их в определённом стиле (там все достаточно легко). Больше ни о чем беспокоиться не нужно: jekyll сам создаёт нужные файлы в формате HTML и размещает их там, где нужно.&lt;/p&gt;

&lt;p&gt;Конечно, если копнуть поглубже, то там на самом деле можно творить много крутых вещей: например, создавать собственные шаблоны и т.п. и, скорее всего, в дальнейшем мне еще предстоит всему этому научиться, но пока что все, с чем я работал, было автоматизировано до предела.&lt;/p&gt;

&lt;p&gt;На &lt;a href=&quot;https://jekyllrb.com/&quot;&gt;сайте&lt;/a&gt; Jekyll содержится подробное руководство по использованию сервиса. Правда, там все на английском языке, но если я серьезно хочу стать программистом, то нужно прилагать усилия к тому, чтобы научиться как минимум понимать англоязычные тексты, ведь основной объём информации по всем вопросам в программировании всегда был и будет доступен именно на инглише.&lt;/p&gt;

&lt;p&gt;Кстати, по поводу английского: категоричным требованием Кирилла было в первую очередь перевести все доступные мне интерфейсы на английский язык. Это касается буквально всего: любые меню, будь то на сайтах, в приложениях, на компьютере и в телефоне, даже в банкомате. Чем больше английского будет в окружающем меня мире, тем лучше. В принципе, я старался следовать этому совету и раньше, но теперь активно перевожу на английский все, с чем приходится сталкиваться в жизни.
Кстати, от себя могу еще посоветовать смотреть все фильмы только на английском в оригинале, с субтитрами. Это очень помогает научиться воспринимать англоязычную речь на слух. Я, вообще-то редко смотрю кино, особенно теперь, когда серьёзно занялся учебой: на это просто не остаётся времени. Но если уж и хочется иногда устроить себе праздник, то я всегда первым делом ищу фильм с оригинальной звуковой дорожкой и с возможностью выбора субтитров. Это так, на заметку.&lt;/p&gt;

&lt;h2 id=&quot;3-Работа-с-github&quot;&gt;3. Работа с GitHub.&lt;/h2&gt;

&lt;p&gt;Здесь даже нечего обсуждать) Любой программист знает о таком сервисе, как GitHub и просто обязан уметь работать с ним. Теперь, когда у меня имеется готовый сайт, созданный джекилом, я могу залить его на гитхаб и продолжать работать с ним так, как это делают настоящие профессионалы: создавая служебные ветки, внося изменения, вливая рабочие и проверенные изменения в основную ветку и фиксируя текущее состояние. Очень хорошо, что теперь у меня на руках есть настоящий рабочий проект, пусть и простой, с которым можно тренироваться.&lt;/p&gt;

&lt;p&gt;На самом сайте гитхаба есть разные обучающие туториалы и видеоматериалы. Один из них я как раз прохожу прямо сейчас. Опять же, там все на английском, но нас ведь это не должно пугать, правда? Тем более, что английский там довольно легкий, лично мне было абсолютно все понятно даже без словаря.&lt;/p&gt;

&lt;p&gt;Отдельная тема - доступ к удаленным репозиториям посредством безопасного протокола SSH. Гитхаб предоставляет возможность доступа к своим репозиториям с локального компьютера по этому протоколу, но можно взаимодействовать с ними и просто по HTTP. Кирилл дал мне &lt;a href=&quot;https://youtu.be/sbVYRf_6Hvg&quot;&gt;ссылку на видео&lt;/a&gt;, где объясняется про то, что такое SSH и как этим пользоваться, но признаюсь честно, пока что я еще не успел разобраться с этим вопросом и все еще пользуюсь обычным HTTP-доступом.&lt;/p&gt;

&lt;h2 id=&quot;4-Хостинг-github-pages&quot;&gt;4. Хостинг GitHub Pages.&lt;/h2&gt;

&lt;p&gt;Гитхаб предоставляет всем своим пользователям бесплатный хостинг для статических сайтов. Все, что нужно для того, чтобы начать пользоваться хостингом — это создать репозиторий с именем вида “username.github.io” и просто залить туда свой сайт. Теперь наш сайт сразу же становится доступным по вышеупомянутому адресу. При этом, если у вас есть своё собственное зарегистрированное доменное имя, его можно без проблем прикрутить к сайту и тогда можно будет переходить на него по более легкозапоминающемуся адресу.
В принципе, здесь все очень просто, по крайней мере, на первый взгляд, лично у меня с этим никаких проблем не возникло.&lt;/p&gt;

&lt;p&gt;Что еще можно добавить? Как я уже говорил, специфика моей работы такова, что с одной стороны, у меня остаётся очень мало времени и сил на практику и фактически, вся моя активность в плане учёбы приходится на конец недели. С другой стороны, во время самой работы у меня есть возможность поглощать просто тонны аудиоконтента: книг, подкастов, выступлений и т.д. Было бы глупо пренебрегать таким ценным ресурсом и надо пытаться использовать эту возможность по максимуму. Но проблема заключается в том, что в сети можно найти не так уж много аудиокниг, напрямую связанных с программированием. В самом деле: не будет же диктор сидеть и, с выражением, зачитывать нам код строка за строкой))) Поэтому в основном пока занимаюсь прослушиванием подкастов. Кирилл посоветовал мне послушать RadioJS. Я начал прямо с самого начала и на данный момент успел прослушать 13 выпусков. Конечно, далеко не все из обсуждаемых тем мне знакомы и понятны, временами говорят о таких вещах, о которых у меня вообще нет ни малейшего представления. Но главная задача сейчас - это просто пропитаться терминологией и получить общее представление о том, что представляет из себя современная веб-разработка. Кроме того, часть информации все равно по-любому откладывается в подсознании,  так что определённая польза от этого, безусловно, есть. Кроме этого подкаста мне еще очень нравятся Веб-стандарты от создателей HTML Academy. Я все время слежу за их новыми выпусками, но теперь, наверно и его прослушаю с самого начала, когда разделаюсь с RadioJS). Если вы можете посоветовать мне какие-то дополнительные материалы для прослушивания, будь то книги, лекции или подкасты связанные с программированием и саморазвитием, я буду вам очень благодарен!&lt;/p&gt;

&lt;p&gt;Пожалуй, на этом все, если вдруг вспомню что-то еще, то обновлю этот пост. А пока что, пойду синхронизироваться с Кириллом и продолжать учиться. Спасибо всем за внимание и до встречи!&lt;/p&gt;</content><category term="posts" /><category term="Git" /><category term="Github" /><category term="Github Pages" /><category term="Jekyll" /><summary type="html">Что нового я узнал и выучил за те пару недель, когда этот блог еще не был готов.</summary></entry><entry><title type="html">Привет, Мир!</title><link href="/first-post/" rel="alternate" type="text/html" title="Привет, Мир!" /><published>2017-05-15T10:00:00+03:00</published><updated>2017-05-15T10:00:00+03:00</updated><id>/first-post</id><content type="html" xml:base="/first-post/">&lt;p&gt;&lt;img src=&quot;/assets/img/me2.jpg&quot; alt=&quot;Это типа я :)&quot; class=&quot;img-responsive&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Приветствую вас, дорогие читатели! В этом пилотном посте мне бы хотелось представиться, немного рассказать о себе и о данном проекте: в чем его цель, о чем я буду здесь писать и как вообще появилась идея создания такого блога. Но обо всем по порядку…&lt;/p&gt;

&lt;p&gt;Меня зовут Йоси, мне 30 лет и вот уже 3 года я живу в Израиле — стране, которую весь мир по праву называет страной стартапов. Почти половину своей жизни я прожил в Москве — городе безграничных возможностей. А  родился я в Харькове —  самом айтишном городе Украины ;) Казалось бы, при таком раскладе мне сам бог велел посвятить свою жизнь компьютерам и программированию)&lt;/p&gt;

&lt;p&gt;Магия компьютера действительно манила меня с самого детства и, хотя у моих бабушки с дедушкой, которые, так уж получилось, воспитывали меня сами, не было финансовой возможности обеспечить меня плодом моих мечтаний, я целыми днями зависал дома у моего лучшего друга, которому в этом плане повезло немного больше. Вместе мы играли в игры на его компе, либо же просто баловались в программах вроде фотошопа или музыкального редактора. Из всех занятий в младшей школе я больше всего любил уроки информатики, во время которых старательно перепечатывал из тетрадки на монитор программы, выводящие на экран рисунки из крестиков, а самой зачитанной до дыр книгой в школьной библиотеке была “Энциклопедия профессора Фортрана”. В тот самый день, когда я открыл для себя Интернет, я понял, что это — пристрастие всей моей жизни. Я сразу же заболел тяжёлой формой зависимости, от которой не нашёл излечения по сей день. Помню, в детстве я даже носил с собой специальный блокнотик, в который записывал все URL-адреса, которые попадались мне на глаза, чтобы потом, когда предоставится возможность, знать: куда зайти и что посмотреть :) Уже тогда я твёрдо решил, что когда-нибудь обязательно внесу свою лепту в развитие Всемирной паутины и научусь создавать сайты самостоятельно.&lt;/p&gt;

&lt;p&gt;Но жизнь любит преподносить сюрпризы. Однажды, когда мне было около 12 лет к нам в дом попал рекламный буклет, в котором рассказывалось о функционирующей в нашем городе школе с углубленным изучением иврита и еврейских традиций. Все в этой школе было таким интересным и необычным — просто дух захватывало!  Я стал упрашивать бабушку с дедушкой перевести меня туда и, после долгих уговоров, получил согласие. В новой школе я узнал о тысячелетних традициях собственного народа, познакомился с религией своих предков, проникся ей в огромной степени и в какой-то момент осознал, что хочу посвятить свою жизнь служению Богу. Это было как раз то время юношеского бунта, когда никакие уговоры старшего поколения поступить в институт и получить “нормальное” образование не помогали и не были способны изменить моё решение. Школьные годы подошли к концу. Мой друг детства закончил компьютерный колледж, затем институт и стал работать по профессии — программистом, ну а я уехал в Москву, поступил в духовную семинарию, где посвятил многие годы изучению талмуда, законов иудаизма и его философии и в конце концов получил диплом раввина, переписчика священных свитков и степень бакалавра теологии. Я любил свое занятие. Я полюбил Москву. Здесь я нашёл свою будущую жену, здесь у меня родился сын. Я хотел бы остаться здесь навсегда: руководить небольшой общиной где-нибудь на окраине города, либо, на крайняк, в одном из близлежащих городов, знакомить людей с традициями их предков и радоваться своей скромной доле. Но жизнь, как и всегда, была полна сюрпризов. Поиски работы снова привели меня в Украину, на этот раз — в город Донецк. Здесь я пробыл недолго:  буквально через год, в связи с началом вооруженного конфликта, на нашем маленьком семейном совете было принято решение брать ноги в руки и немедленно репатриироваться на историческую родину, начинать жизнь с нового листа.&lt;/p&gt;

&lt;p&gt;Не знаю точно, что случилось со мной здесь, в Израиле. Возможно, возрастной, возможно — культурный или, может быть, финансовый кризис, а скорее всего — и то и другое и третье. Но внезапно я ощутил коренные изменения в собственном мировоззрении. Произошло полное переосмысление жизненных ориентиров и ценностей. Религия постепенно отошла на второй план и перестала занимать видное место в моей жизни. Вместе с этим, ко мне пришло осознание полной личной ответственности за своё будущее и за материальное благополучие моей семьи. Раньше я полагался на чудеса и божественную поддержку, но “повзрослев” и начав мыслить критически, понял, что в этом мире могу надеяться лишь на себя и на собственные силы. Я всерьёз стал задумываться о переквалификации, о приобретении нормальной, светской профессии, способной приносить стабильный доход. Я стал сравнивать, перебирать возможные варианты, и именно в этот момент меня с новой силой потянуло в сторону давней детской мечты. Я снова захотел связать свою жизнь с компьютерами и информационными технологиями и на этот раз — уже навсегда.&lt;/p&gt;

&lt;p&gt;Первоначально, моим планом было попробовать себя в тестировании ПО, а дальше — уж как пойдёт. Мне, как и многим, наверное, по наивности казалось, что QA — это довольно легко и “запрыгнуть на поезд IT” будет проще всего именно с этой станции. Однако чем больше я читал и узнавал об этом роде деятельности, тем понятнее становилось, что самостоятельно освоить данное ремесло будет довольно непросто. Тогда я переключил своё внимание на верстку. Это оказалось уже значительно интереснее. Что хорошо и привлекательно в верстке — так это то, что любые, даже малейшие изменения в коде приводят к результатам, которые можно сразу же наблюдать на мониторе компьютера. Это чертовски круто и очень сильно мотивирует! Чувствуешь себя эдаким волшебником, способным создавать все, что угодно при помощи магических заклинаний, состоящих из тегов и селекторов). Однако очень быстро я понял, что без знания JavaScript в верстке особо далеко не продвинешься и если я действительно хочу научиться создавать сайты от начала и до конца, то без настоящего программирования уже не обойтись.&lt;/p&gt;

&lt;p&gt;Итак, я принялся искать в сети годные курсы и учебники по языку JavaScript. Конечно же, я сразу практически утонул в огромном количестве возможных вариантов. Хватался то за одно, то за другое, много советовался с людьми, но опять же, каждый расхваливал свои книги и свои ресурсы и было непонятно, за что браться в первую очередь. В какой-то момент я вспомнил, что мой друг детства — тот самый, что стал программистом, как-то раз посоветовал мне глянуть какой-то там Хекслет. Ну что ж, подумал я. Этот сайт я еще не пробовал. Забил в гугл название, перешёл по ссылке и… застрял здесь надолго)))&lt;/p&gt;

&lt;p&gt;На данный момент я учусь на Хекслете по направлению JS-программист уже около 3-4 месяцев и за это время успел пройти несколько курсов по профессии. К сожалению, я не располагаю достаточным количеством свободного времени для того, чтобы продвигаться в учёбе быстрыми темпами. Физически тяжелая работа на заводе — всю неделю только в ночные смены, непредсказуемый график, неглубокий и прерывистый дневной сон под звуки соседского перфоратора и гарцующей лошади — все это не слишком располагает к продуктивной учебе в течении недели. Фактически, единственное время, когда я действительно могу углубиться в занятия это выходные дни, но и в этом случае каждый раз приходится разрываться между ролью отца, мужа и примерного ученика. Временами наступают особо тяжёлые моменты, когда опускаются руки и вся эта грандиозная затея с изучением программирования начинает казаться нереальной, а мечта — несбыточной, по крайней мере, при текущих условиях. Кажется, что уже поздно начинать в моём возрасте, что свой шанс я уже упустил много лет назад, что “мозги уже не те”, что даже в случае успеха все равно не смогу найти работу, а если и найду, то далеко не продвинусь и моим уделом будет всю жизнь верстать бложики с котиками. Да и вообще: я по жизни гуманитарий и, скорее всего, программирование — это не моё… Страхов действительно очень много. Но с другой стороны есть огромная мотивация, есть желание, есть мечта. И благодаря ней, я все еще не оставил свою затею и продолжаю свой путь, несмотря на все взлеты и падения.&lt;/p&gt;

&lt;p&gt;В один из таких моментов, когда в очередной раз на меня нахлынула хандра и стали одолевать сомнения, я решил обратиться за советом к Кириллу Мокевнину - техническому директору и главному учителю Хекслета. Я описал вкратце свою ситуацию, своё отчаяние и растерянность. Я не понимал, сколько и в каком направлении мне еще предстоит двигаться, да и стоит ли вообще? По моему мнению, на Хекслете я бесконечно долго занимался абсолютно непрактичными вещами. Какие-то функции высшего порядка, лямбда-выражения, каррирование и прочая функциональщина. А где же обещанный фронтенд? Где работа с элементами страницы и с браузером? Каким образом все то, что я изучал на протяжении последних месяцев, вяжется с версткой, с уже знакомыми мне HTML и CSS? Когда, наконец, я буду в состоянии самостоятельно создать хоть какой-нибудь, пусть даже самый простенький сайт? И сколько мне еще придется потратить времени, прежде чем я реально смогу устроиться на работу? Ведь не каждая компания хочет и может позволить себе тащить на собственных плечах 30-летнего джуниора. Я чувствовал, что окончательно во всем запутался и былая железная мотивация теперь улетучивалась буквально с каждым днём. Кирилл отнесся к моему вопросу серьезно: объяснил мне всю “политику партии”, перевернув с ног на голову все моё предыдущее представление о разнице между фронтендом и бэкендом и дав понять, что я на самом деле двигаюсь в правильном направлении. По итогам нашего общения был также проведён специальный &lt;a href=&quot;https://www.youtube.com/watch?v=5dDx73DyBTo&amp;amp;t=1s&quot;&gt;вебинар&lt;/a&gt; на тему веб-разработки для новичков, в котором я также принял участие (не судите строго, я там на самом деле очень-очень волновался и поэтому довольно много тупил)).&lt;/p&gt;

&lt;p&gt;Но самое интересное еще ждало меня впереди) Кирилл рассказал мне, что у него в голове уже давно созревает идея создания некоего реалити-шоу, в ходе которого заинтересованные люди в реальном времени смогли бы наблюдать за всем процессом обучения и трудоустройства новичка, изначально далекого от мира программирования. Мне было предложено принять участие в этом проекте и стать, так сказать, главным героем. Суть его заключается в том, что Кирилл предлагает мне свою личную менторскую поддержку: он будет время от времени синхронизироваться со мной, давать мне &lt;del&gt;по голове&lt;/del&gt; задания и направлять моё развитие в правильную сторону. Мне будет оказана помощь на всех этапах, включая составление резюме и поиск работы. Взамен этого, я обязуюсь раз в неделю освещать в блоге процесс своего продвижения к трудоустройству: какие задания я получил, что успел изучить и понять, какие выводы сделал. Думаю, любой человек на Хекслете мечтает о личном коучинга Кирилла, поэтому глупо было бы отказываться от такого заманчивого предложения :) Конечно же, я дал своё согласие, челлендж принят и вот: я тут, перед вами).&lt;/p&gt;

&lt;p&gt;Мы с Кириллом очень надеемся, на то, что подобный формат окажется интересным и принесёт большую пользу всем, кто заинтересован пройти тот же самый путь, на который сейчас ступаю я. Я не зря описывал выше все сложности и проблемы, взлеты и падения, с которыми мне приходится сталкиваться в процессе обучения. Очень важно, чтобы читатели блога понимали: я такой же человек из плоти и крови, как и все остальные, мой путь усеян трудностями и препятствиями, в моей жизни есть обстоятельства, создающие множество помех для учебы, мне свойственны те же страхи и сомнения, что и всем остальным новичкам в этом нелёгком деле. Но если я смогу, то и все остальные тоже смогут! Осознание огромной ответственности перед всеми вами создаёт мне просто железную мотивацию к тому, чтобы пройти этот путь до конца. Теперь, после того, как я заявил о своём намерении на весь мир, я просто не могу спасовать и отказаться от своей затеи, ведь таким образом, я подведу всех тех, кто вдохновляется моим примером. Таким образом, я очень надеюсь, что данный проект окажется полезным для всех нас. Я желаю удачи всем тем, кто идёт по этому нелегкому пути вместе со мной и также сильно рассчитываю на вашу поддержку. Для меня это очень важно!&lt;br /&gt;
Вы всегда можете связаться со мной разными способами:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Facebook: &lt;a href=&quot;https://www.facebook.com/joisadler&quot;&gt;Yossi Adler&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Email: &lt;a href=&quot;mailto:joisadler@gmail.com&quot;&gt;joisadler@gmail.com&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Слак-чат Хекслета: joisadler&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Кроме того, я надеюсь, что в скором времени добавлю сюда возможность оставлять комментарии, осталось только разобраться в том, как это делается :) А пока что, буду ждать обратной связи по всем остальным каналам.&lt;/p&gt;

&lt;p&gt;Ну что ж, наверно, для первого раза достаточно. В следующем &lt;a href=&quot;https://joisadler.github.io/week1-2/&quot;&gt;посте&lt;/a&gt; я уже поподробнее расскажу о том, что нового я узнал и выучил за те пару недель, когда этот блог еще не был готов.&lt;/p&gt;

&lt;p&gt;До встречи!&lt;/p&gt;</content><category term="первый пост" /><summary type="html">В этом пилотном посте я расскажу немного о себе и о том, как родилась идея данного проекта.</summary></entry></feed>
